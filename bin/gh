#!/usr/bin/env bash
set -e

usage() {
  echo "
  usage: $(basename $0) [options]

  Open the current Git repository in a browser.

  options:

    --default-branch <branch-name>
"
}

get_slug() {
  git config --get "remote.$1.url" \
  | sed -E 's!^([^@]*@[^:]*:|https://[^/]*/)([^/]*/[^/]*)[.]git$!\2!'
}

# If refs/heads/master exists, returns "master";
# else if refs/heads/gh-pages exists, returns "gh-pages";
# else returns "master".
get_default_branch() {
  local ref
  for ref in $(git for-each-ref --format='%(refname)' refs/heads | sort -r) ; do
    [ "$ref" = 'refs/heads/master' ] && printf master && exit
    [ "$ref" = 'refs/heads/gh-pages' ] && printf gh-pages && exit
  done
  printf master
}

origin_slug="$(get_slug origin)"
upstream_slug="$(get_slug upstream)"
default_branch="$(get_default_branch)"
current_branch="$(git rev-parse --abbrev-ref HEAD)"
case "$1" in
  -h|--help) usage ; exit ;;
  --default-branch) default_branch="$2" ;;
  -*) echo "invalid argument $1" >&2 ; exit 1 ;;
esac
if [ -n "$upstream_slug" ] ; then
  open "https://github.com/$origin_slug/compare/${upstream_slug/\/*/}:$default_branch...$current_branch"
elif [ "$current_branch" = "$default_branch" ] ; then
  open "https://github.com/$origin_slug/commits/$default_branch"
else
  open "https://github.com/$origin_slug/compare/$default_branch...$current_branch"
fi
